<Window x:Class="Modding_Assistant.MVVM.View.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Modding_Assistant"
        xmlns:viewModel="clr-namespace:Modding_Assistant.MVVM.ViewModel"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:conv="clr-namespace:Modding_Assistant.MVVM.View.Converters"
        xmlns:core="clr-namespace:Modding_Assistant.Core"
        mc:Ignorable="d"
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True"
        Height="600" Width="900">
    <Window.Resources>
        <Style x:Key="CenterTextColumnStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>
        <ContextMenu x:Key="DataGridContextMenu">
            <MenuItem Header="Copy Cell" Command="ApplicationCommands.Copy"/>
            <MenuItem Header="Select All" Command="ApplicationCommands.SelectAll"/>
            <MenuItem Header="Refresh" Command="{Binding LoadCommand}"
                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"/>
            <MenuItem Header="Move to..." Command="{Binding MoveBeforeCommand}" 
                      CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
            <MenuItem Header="Delete" Command="{Binding DeleteCommand}" 
                      CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
        </ContextMenu>
        <conv:RowIndexConverter x:Key="RowIndexConverter"/>
        <conv:DateOnlyToDateTimeConverter x:Key="DateOnlyToDateTimeConverter"/>
        <Geometry x:Key="MaximizeButtonGeometry">M0,0 M0.2,0.2 L0.8,0.2 L0.8,0.8 L0.2,0.8 Z M1,1</Geometry>
        <Geometry x:Key="RestoreButtonGeometry">M0,0 M0.3,0.3 L0.9,0.3 L0.9,0.9 L0.3,0.9 Z M0.1,0.1 L0.1,0.7 L0.7,0.7 L0.7,0.1 Z M1,1</Geometry>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadCommand}"
                                   CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Border Background="#27253F"
            CornerRadius="10">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonDown">
                <i:InvokeCommandAction Command="{Binding MoveWindowCommand}"
                                       CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="Mod Assistant" Grid.Column="1" Foreground="#DFFFFF" VerticalAlignment="Top"
                       HorizontalAlignment="Center"
                       FontSize="22"
                       IsHitTestVisible="False">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="0 5 0 0"/> 
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                <Setter Property="Margin" Value="0 10 0 0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <StackPanel Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                <Setter Property="Margin" Value="0 5 5 0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Button Height="45" Width="45" Command="{Binding MinimizeCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Bd" Background="Transparent">
                                <Path Data="M0,0 M0.2,0.5 L0.8,0.5 M1,1"
                                Stretch="Uniform" Stroke="#DFFFFF" StrokeThickness="2"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="Background" Value="RoyalBlue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button Height="45" Width="45" Command="{Binding MaximizeCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Bd" Background="Transparent">
                                <Path x:Name="IconPath" Data="{StaticResource MaximizeButtonGeometry}"
                                Stretch="Uniform" Stroke="#DFFFFF" StrokeThickness="2"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                    <Setter TargetName="IconPath" Property="Data" Value="{StaticResource RestoreButtonGeometry}"/>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="Background" Value="Violet"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button Height="45" Width="45" Command="{Binding ExitCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Bd" Background="Transparent" CornerRadius="0 10 0 0">
                                <Path Data="M0,0 M0.2,0.2 L 0.8,0.8 M0.2,0.8 L0.8,0.2 M1,1"
                                Stretch="Uniform" Stroke="#DFFFFF" StrokeThickness="2"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="Background" Value="Red"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
            <DataGrid Grid.ColumnSpan="3" Grid.Row="1" ItemsSource="{Binding ModList}" AutoGenerateColumns="False"
                      HeadersVisibility="Column" RowHeaderWidth="0" ContextMenu="{StaticResource DataGridContextMenu}"
                      SelectionMode="Extended">
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#3C3A55"/>
                        <Setter Property="Foreground" Value="#DFFFFF"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" 
                                               TextTrimming="CharacterEllipsis"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Background" Value="#27253F"/>
                        <Setter Property="Foreground" Value="#DFFFFF"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Height" Value="30"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#4B4A6E"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#3C3A55"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="№" IsReadOnly="True" Width="*" ElementStyle="{StaticResource CenterTextColumnStyle}">
                        <DataGridTextColumn.Binding>
                            <MultiBinding Converter="{StaticResource RowIndexConverter}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGrid}"/>
                                <Binding/>
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Order" IsReadOnly="True" Binding="{Binding Order}"  Width="*" ElementStyle="{StaticResource CenterTextColumnStyle}"/>
                    <DataGridTextColumn Header="Name" Width="4*" ElementStyle="{StaticResource CenterTextColumnStyle}">
                        <DataGridTextColumn.Binding>
                            <Binding Path="Name" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <core:NotEmptyValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Version" Width="2*" ElementStyle="{StaticResource CenterTextColumnStyle}">
                        <DataGridTextColumn.Binding>
                            <Binding Path="Version" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <core:NotEmptyValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="InstallInstructions" Width="6*" ElementStyle="{StaticResource CenterTextColumnStyle}">
                        <DataGridTextColumn.Binding>
                            <Binding Path="InstallInstructions" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <core:NotEmptyValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Url" Binding="{Binding Url}" Width="6*" ElementStyle="{StaticResource CenterTextColumnStyle}"/>
                    <DataGridTextColumn Header="Dependencies" Binding="{Binding Dependencies}" Width="2*" ElementStyle="{StaticResource CenterTextColumnStyle}"/>
                    <DataGridTextColumn Header="ModRawName" Binding="{Binding ModRawName}" Width="4*" ElementStyle="{StaticResource CenterTextColumnStyle}"/>
                    <DataGridTemplateColumn Header="LastUpdated" Width="2*" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding LastUpdated, StringFormat='dd.MM.yyyy'}" HorizontalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker>
                                    <DatePicker.SelectedDate>
                                        <Binding Path="LastUpdated" 
                                                 Mode="TwoWay" 
                                                 UpdateSourceTrigger="PropertyChanged" 
                                                 ValidatesOnDataErrors="True" 
                                                 NotifyOnValidationError="True"
                                                 Converter="{StaticResource DateOnlyToDateTimeConverter}">
                                            <Binding.ValidationRules>
                                                <core:NotEmptyValidationRule/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </DatePicker.SelectedDate>
                                </DatePicker>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Description" Width="6*" ElementStyle="{StaticResource CenterTextColumnStyle}">
                        <DataGridTextColumn.Binding>
                            <Binding Path="Description" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <core:NotEmptyValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="PotentialIssues" Binding="{Binding PotentialIssues}" Width="6*" ElementStyle="{StaticResource CenterTextColumnStyle}"/>
                </DataGrid.Columns>
                <DataGrid.Style>
                    <Style TargetType="DataGrid">
                        <Setter Property="Margin" Value="30 10 30 25"/>
                        <Setter Property="Background" Value="#27253F"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                <Setter Property="Margin" Value="75 10 75 50"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>
            </DataGrid>
        </Grid>
    </Border>
</Window>
